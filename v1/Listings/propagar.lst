


ARM Macro Assembler    Page 1 


    1 00000000         ; Funcion: 
    2 00000000         ; Función propagar_arm, adaptación de la función propaga
                       r a ARM.
    3 00000000         ; Parametros de la funcion: 
    4 00000000         ; R0: @tablero, R1: fila, R2:columna 
    5 00000000         ; Descripcion:
    6 00000000         ;  La funcion candidatos_propagar_arm propaga el valor d
                       e una determinada celda en C
    7 00000000         ;  para actualizar las listas de candidatos de las celda
                       s en su su fila, columna y región
    8 00000000         ;  Recibe como parametro la cuadricula, y la fila y colu
                       mna de la celda a propagar; no devuelve nada
    9 00000000                 PRESERVE8
   10 00000000                 AREA             DATOS, data
   11 00000000 00 00 00 
              03 03 03 
              06 06 06 region  DCB              0,0,0,3,3,3,6,6,6
   12 00000009                 AREA             f_candidatos_propagar_arm, CODE
, READONLY
   13 00000000                 EXPORT           candidatos_propagar_arm
   14 00000000         candidatos_propagar_arm
   15 00000000 E92D47F0        STMDB            R13!,{R4-R10,R14}
   16 00000004 E1A06000        MOV              R6,R0       ; R6 es @cuadricula
                                                            
   17 00000008 E1A07001        MOV              R7,R1       ; R7 es la fila
   18 0000000C E1A08002        MOV              R8,R2       ; R8 es la columna
   19 00000010         
   20 00000010 E59F20E4        LDR              R2,=region  ; R2 es la @ del in
                                                            icio del vector reg
                                                            ion  
   21 00000014         
   22 00000014 E0860287        ADD              R0,R6,R7,LSL #5 ; valor = celda
                                                            _leer_valor
   23 00000018 E0801088        ADD              R1,R0,R8,LSL #1 ; En R1 hemos c
                                                            alculado la @ celda
                                                            
   24 0000001C E1D100B0        LDRH             R0,[R1]     ; En R0 guardamos e
                                                            l valor de la celda
                                                            
   25 00000020 E200100F        AND              R1,R0,#0x0000000F 
                                                            ; valor        
   26 00000024 E3A09000        MOV              R9,#0x00000000 ; R9 es la j del
                                                             primer for (iterad
                                                            or)
   27 00000028         INI_FOR_1
   28 00000028 E3590009        CMP              R9,#0x00000009
   29 0000002C 0A00000A        BEQ              FIN_FOR_1
   30 00000030 E0864287        ADD              R4,R6,R7,LSL #5 ; @ fila
   31 00000034 E0840089        ADD              R0,R4,R9,LSL #1 ; En R0 guardam
                                                            os la @ celda
   32 00000038 E3A04007        MOV              R4,#0x00000007
   33 0000003C E1D050B0        LDRH             R5,[R0]     ; En R5 guardamos e
                                                            l valor de la celda
                                                            
   34 00000040 E2413001        SUB              R3,R1,#0x00000001 ; valor - 1
   35 00000044 E0844003        ADD              R4,R4,R3    ; 7 + (valor - 1)
   36 00000048 E3A0A001        MOV              R10,#0x00000001
   37 0000004C E185541A        ORR              R5,R5,R10,LSL R4 ; celdaptr OR 
                                                            7 + (valor - 1)



ARM Macro Assembler    Page 2 


   38 00000050 E1C050B0        STRH             R5,[R0]
   39 00000054         ;fin celda eliminar candidatos 
   40 00000054 E2899001        ADD              R9,R9,#0x00000001
   41 00000058 EAFFFFF2        B                INI_FOR_1
   42 0000005C         FIN_FOR_1
   43 0000005C E3A09000        MOV              R9,#0x00000000 ; R9 es la i del
                                                             segundo for
   44 00000060         INI_FOR_2
   45 00000060 E3590009        CMP              R9,#0x00000009
   46 00000064 0A00000A        BEQ              FIN_FOR_2
   47 00000068 E0864289        ADD              R4,R6,R9,LSL #5 ; @ columna
   48 0000006C E0840088        ADD              R0,R4,R8,LSL #1 ; En R0 guardam
                                                            os la @ celda
   49 00000070         ;LDR R1,[R13]
   50 00000070         ;celda eliminar candidatos
   51 00000070 E3A04007        MOV              R4,#0x00000007
   52 00000074 E1D050B0        LDRH             R5,[R0]     ; En R5 guardamos e
                                                            l valor de la celda
                                                            
   53 00000078 E2413001        SUB              R3,R1,#0x00000001 ; valor - 1
   54 0000007C E0844003        ADD              R4,R4,R3    ; 7 + (valor - 1)
   55 00000080 E3A0A001        MOV              R10,#0x00000001
   56 00000084 E185541A        ORR              R5,R5,R10,LSL R4 ; celdaptr OR 
                                                            7 + (valor - 1)
   57 00000088 E1C050B0        STRH             R5,[R0]
   58 0000008C         ;fin celda eliminar candidatos 
   59 0000008C E2899001        ADD              R9,R9,#0x00000001
   60 00000090 EAFFFFF2        B                INI_FOR_2
   61 00000094         FIN_FOR_2
   62 00000094         
   63 00000094 E0824007        ADD              R4,R2,R7
   64 00000098 E5D43000        LDRB             R3,[R4]     ; R3 = init_region[
                                                            fila]
   65 0000009C E0824008        ADD              R4,R2,R8
   66 000000A0 E5D45000        LDRB             R5,[R4]     ; R5 = init_region[
                                                            columna]
   67 000000A4 E2834003        ADD              R4,R3,#0x00000003 ; R4 = end_i
   68 000000A8 E2859003        ADD              R9,R5,#0x00000003 ; R9 = end_j 
                                                            
   69 000000AC         INI_I
   70 000000AC E1530004        CMP              R3,R4
   71 000000B0 0A00000F        BEQ              FUERA_I
   72 000000B4 E1A0A005        MOV              R10,R5
   73 000000B8         INI_J
   74 000000B8 E15A0009        CMP              R10,R9
   75 000000BC 0A00000A        BEQ              FUERA_J
   76 000000C0 E0862283        ADD              R2,R6,R3,LSL #5
   77 000000C4 E082008A        ADD              R0,R2,R10,LSL #1 ; En R0 guarda
                                                            mos cuadricula[i][j
                                                            ]
   78 000000C8         ;celda eliminar candidatos
   79 000000C8 E3A07007        MOV              R7,#0x00000007
   80 000000CC E1D020B0        LDRH             R2,[R0]     ; R2 = celdaptr
   81 000000D0 E2418001        SUB              R8,R1,#0x00000001 ; valor - 1
   82 000000D4 E0877008        ADD              R7,R7,R8    ; 7 + (valor - 1)
   83 000000D8 E3A08001        MOV              R8,#0x00000001
   84 000000DC E1822718        ORR              R2,R2,R8,LSL R7 ; celdaptr OR 7
                                                             + (valor - 1)
   85 000000E0 E1C020B0        STRH             R2,[R0]



ARM Macro Assembler    Page 3 


   86 000000E4         ;fin celda eliminar candidatos     
   87 000000E4 E28AA001        ADD              R10,R10,#0x00000001 ; j++
   88 000000E8 EAFFFFF2        B                INI_J
   89 000000EC         FUERA_J
   90 000000EC E2833001        ADD              R3,R3,#0x00000001 ; i++
   91 000000F0 EAFFFFED        B                INI_I
   92 000000F4         FUERA_I
   93 000000F4 E8BD47F0        LDMIA            R13!,{R4-R10,R14}
   94 000000F8 E12FFF1E        BX               R14
   95 000000FC                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\propagar.d -o.\objects\propagar.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5
\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --p
redefine="__UVISION_VERSION SETA 526" --list=.\listings\propagar.lst propagar.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATOS 00000000

Symbol: DATOS
   Definitions
      At line 10 in file propagar.s
   Uses
      None
Comment: DATOS unused
region 00000000

Symbol: region
   Definitions
      At line 11 in file propagar.s
   Uses
      At line 20 in file propagar.s
Comment: region used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FIN_FOR_1 0000005C

Symbol: FIN_FOR_1
   Definitions
      At line 42 in file propagar.s
   Uses
      At line 29 in file propagar.s
Comment: FIN_FOR_1 used once
FIN_FOR_2 00000094

Symbol: FIN_FOR_2
   Definitions
      At line 61 in file propagar.s
   Uses
      At line 46 in file propagar.s
Comment: FIN_FOR_2 used once
FUERA_I 000000F4

Symbol: FUERA_I
   Definitions
      At line 92 in file propagar.s
   Uses
      At line 71 in file propagar.s
Comment: FUERA_I used once
FUERA_J 000000EC

Symbol: FUERA_J
   Definitions
      At line 89 in file propagar.s
   Uses
      At line 75 in file propagar.s
Comment: FUERA_J used once
INI_FOR_1 00000028

Symbol: INI_FOR_1
   Definitions
      At line 27 in file propagar.s
   Uses
      At line 41 in file propagar.s
Comment: INI_FOR_1 used once
INI_FOR_2 00000060

Symbol: INI_FOR_2
   Definitions
      At line 44 in file propagar.s
   Uses
      At line 60 in file propagar.s
Comment: INI_FOR_2 used once
INI_I 000000AC

Symbol: INI_I
   Definitions
      At line 69 in file propagar.s
   Uses
      At line 91 in file propagar.s
Comment: INI_I used once
INI_J 000000B8

Symbol: INI_J



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 73 in file propagar.s
   Uses
      At line 88 in file propagar.s
Comment: INI_J used once
candidatos_propagar_arm 00000000

Symbol: candidatos_propagar_arm
   Definitions
      At line 14 in file propagar.s
   Uses
      At line 13 in file propagar.s
Comment: candidatos_propagar_arm used once
f_candidatos_propagar_arm 00000000

Symbol: f_candidatos_propagar_arm
   Definitions
      At line 12 in file propagar.s
   Uses
      None
Comment: f_candidatos_propagar_arm unused
10 symbols
346 symbols in table
